---
- name: Deletes existing Sonar container.
  tags: sonar_delete_container
  docker:
    name: "{{ sonar_server_container_name }}"
    image: "{{ sonar_server_image }}"
    docker_api_version: "{{ docker_api_version }}"
    state: absent

- name: Deletes existing Sonar data container.
  tags: sonar_delete_data_container
  docker:
    name: "{{ sonar_server_data_container_name }}"
    image: "{{ sonar_server_image }}"
    docker_api_version: "{{ docker_api_version }}"
    state: absent

- name: Creates the Sonar directories.
  tags: sonar_dirs
  file: path="{{ app_dir }}/{{ item }}" state=directory mode=0755
  ignore_errors: yes
  with_items:
  - "{{ sonar_server_data_dir }}"
  - "{{ sonar_server_extensions_dir }}"

- name: Creates the Sonar data container.
  tags: sonar_create_data_container
  docker:
    name: "{{ sonar_server_data_container_name }}"
    image: "{{ sonar_server_image }}"
    state: started
    docker_api_version: "{{ docker_api_version }}"
    command: "bash -c 'chown -R sonar:sonar /opt/sonarqube/data'"
    volumes:
    - "{{ app_dir }}/{{ sonar_server_data_dir }}:/opt/sonarqube/data"
    - "{{ app_dir }}/{{ sonar_server_extensions_dir }}:/opt/sonarqube/extensions"

- name: Creates the Sonar docker container.
  tags: sonar_create_container
  docker:
    name: "{{ sonar_server_container_name }}"
    image: "{{ sonar_server_image }}"
    state: restarted
    restart_policy: always
    privileged: true
    docker_api_version: "{{ docker_api_version }}"
    volumes_from: "{{ sonar_server_data_container_name }}"
    env:
      SONARQUBE_JDBC_USERNAME: "{{ sonar_server_db_user }}"
      SONARQUBE_JDBC_PASSWORD: "{{ sonar_server_db_password }}"
      SONARQUBE_JDBC_URL: "{{ sonar_server_jdbc }}?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance"
    links:
    - "{{ mysql_container_name }}:db"
    ports:
    - "9000:9000"
    - "9092:9092"
